 <script>
;(function($){  
  $.titleAlert = function(text, settings) {
    // check if it currently flashing something, if so reset it
    if ($.titleAlert._running)
      $.titleAlert.stop();

    // override default settings with specified settings
    $.titleAlert._settings = settings = $.extend( {}, $.titleAlert.defaults, settings);

    // if it's required that the window doesn't have focus, and it has, just return
    if (settings.requireBlur && $.titleAlert.hasFocus)
      return;

    // originalTitleInterval defaults to interval if not set
    settings.originalTitleInterval = settings.originalTitleInterval || settings.interval;

    $.titleAlert._running = true;
    $.titleAlert._initialText = document.title;
    document.title = text;
    var showingAlertTitle = true;
    var switchTitle = function() {
      // WTF! Sometimes Internet Explorer 6 calls the interval function an extra time!
      if (!$.titleAlert._running)
        return;

        showingAlertTitle = !showingAlertTitle;
        document.title = (showingAlertTitle ? text : $.titleAlert._initialText);
        $.titleAlert._intervalToken = setTimeout(switchTitle, (showingAlertTitle ? settings.interval : settings.originalTitleInterval));
    }
    $.titleAlert._intervalToken = setTimeout(switchTitle, settings.interval);

    if (settings.stopOnMouseMove) {
      $(document).mousemove(function(event) {
        $(this).unbind(event);
        $.titleAlert.stop();
      });
    }

    // check if a duration is specified
    if (settings.duration > 0) {
      $.titleAlert._timeoutToken = setTimeout(function() {
        $.titleAlert.stop();
      }, settings.duration);
    }
  };

  // default settings
  $.titleAlert.defaults = {
    interval: 500,
    originalTitleInterval: null,
    duration:0,
    stopOnFocus: true,
    requireBlur: false,
    stopOnMouseMove: false
  };

  // stop current title flash
  $.titleAlert.stop = function() {
    if (!$.titleAlert._running)
      return;

    clearTimeout($.titleAlert._intervalToken);
    clearTimeout($.titleAlert._timeoutToken);
    document.title = $.titleAlert._initialText;

    $.titleAlert._timeoutToken = null;
    $.titleAlert._intervalToken = null;
    $.titleAlert._initialText = null;
    $.titleAlert._running = false;
    $.titleAlert._settings = null;
  }

  $.titleAlert.hasFocus = true;
  $.titleAlert._running = false;
  $.titleAlert._intervalToken = null;
  $.titleAlert._timeoutToken = null;
  $.titleAlert._initialText = null;
  $.titleAlert._settings = null;


  $.titleAlert._focus = function () {
    $.titleAlert.hasFocus = true;

    if ($.titleAlert._running && $.titleAlert._settings.stopOnFocus) {
      var initialText = $.titleAlert._initialText;
      $.titleAlert.stop();

      // ugly hack because of a bug in Chrome which causes a change of document.title immediately after tab switch
      // to have no effect on the browser title
      setTimeout(function() {
        if ($.titleAlert._running)
          return;
        document.title = ".";
        document.title = initialText;
      }, 1000);
    }
  };
  $.titleAlert._blur = function () {
    $.titleAlert.hasFocus = false;
  };

  // bind focus and blur event handlers
  $(window).bind("focus", $.titleAlert._focus);
  $(window).bind("blur", $.titleAlert._blur);
})(jQuery);
  </script>
 <script type="text/javascript" charset="utf-8">
  $(function() {
    
    function refreshStats() {
      $.get(window.location.href, function(html) {
        $("#team-table").html($(html).find("#team-table").html());
      });
    }

    $(".refresh-stats").click(function(e) {
      e.preventDefault();
      refreshStats();
    });

    var pusher = new Pusher('221f87b0aba422a3df7e'); // Replace with your app key
    
    
    var channel = pusher.subscribe('private-<%= @league.id %>');


    channel.bind('new_message', function(data) {
        msg = data.subject
        dom_notify(msg);
        title_notify(msg);
        refreshStats();
        if (window.webkitNotifications) { webkit_notify(msg); }
      });

      // In DOM alert
      function dom_notify(msg) {
        $('#notify').text(msg);
        $('#notify').fadeIn();
      }
      
      // <title> msg
      function title_notify(msg) {
        $.titleAlert(msg);
      }
      
      // Webkit Notifications API
      // http://www.html5rocks.com/en/tutorials/notifications/quick/
      
      // Setup permissions
      if (window.webkitNotifications) {
        console.log("Notifications are supported!");
        $('#notify_api').show();
      }
      else {
        console.log("Notifications are not supported for this Browser/OS version yet.");
      }
      
      $('#ask_notify_permission').click(function() {
        window.webkitNotifications.requestPermission();
      });
      
      // Notify function
      function webkit_notify(msg) {
        notify = window.webkitNotifications.createNotification('http://pusher.com/stylesheets/images/feature_scalable.png', msg, '');
        notify.show();
      }
      
      // Some useful Pusher debug msgs
      pusher.connection.bind('connecting', function() {
        $('div#status').text('Connecting to Pusher...');
      });
      pusher.connection.bind('connected', function() {
        $('div#status').text('Connected to Pusher!');
      });
      pusher.connection.bind('failed', function() {
        $('div#status').text('Connection to Pusher failed :(');
      });
      channel.bind('subscription_error', function(status) {
        $('div#status').text('Pusher subscription_error');
      });
    });
  </script>

<div class="containter-fluid">
  <div class="row-fluid" id="pageHeader">
    <div class="span12" style="height:750px; background-color:white; color:black; padding-top:20px; padding-left: 20px">
      <h1> <%= @league.name %> 
         </h1> 

        <% if @league.status == 'not_started' %>
         <% if current_user.teams.where(:league_id => @league.id).blank? %>
            <%= link_to 'Join this League', '/teams/new?league_id='  + @league.id.to_s, :class => 'btn btn-primary' %>
          <% else %>
            <div class="alert alert-success span4">
            <span style="color: green; font-size: 25pt;">âœ“</span> &nbsp;&nbsp;&nbsp;You are a member of this League
            </div>
          <% end %>
        <% end %>
       

           <div>
            <% if ((current_user.id == @league.user_id) && (@league.status == 'not_started')) %>
              <div style="padding-top: 80px;padding-left: 25px;">
                <%= form_tag drafts_path(@league) do %>
                  <%= submit_tag 'Start Draft', :class => 'btn btn-danger' %>(only you can start this)
              
                <% end %>
              </div>
            <% end %>
          </div>
        
        <% if current_user.id == @league.user_id %>
          <div class="span4">
          <%= link_to("Configure League Rules", @league.id.to_s + '/edit', :class => 'btn btn-info') %>
          </div>
         <% end %>
          <br>
          <p>&nbsp;</p>
         <p>&nbsp;</p>
        <div class="alert alert-info span5">
          Commissioner: <%= @commiss.email %>
        <br>
        <% if @league.status == 'draft_completed' %>
        <span style="color: green"><strong>Status<%= @league.name %> Draft is finished!</strong></span>
        
        <% else %>
        <% if @league.status == 'draft_started' %>
        <span style="color: green"><strong><%= @league.name %> Draft is in progress!</strong></span>
        <% end %>
        <% end %>
        <br>
        <strong>League Rules: </strong> Forwards: <%= @league.lr_forwards %> | Defensemen: <%= @league.lr_defensemen %> | Goalies: <%= @league.lr_goalies %> 
        </div>

      <table class="table table-striped" id='team-table'>
        <tr>
          <th>Teams</th>
          <th>Actions</th>
          <th></th>
        </tr>

      <% @teams.each do |team| %>
        <tr>
          <td><%= link_to team.name, team %></td>
        
          <td>
            <% if current_user.id == team.user_id %>
            <% if @league.status == 'draft_started' %>


            <%= link_to 'Draft', players_path(params.merge(:league_id => @league.id, :team_id => team)), :class => 'btn btn-success' %>
          
            <% end %>
            <% end %>

          </td>
      <td>
        </tr>

      <% end %>
       <tr>
      

      </tr>

      </table>
      <td style="padding-top: 15px">  
      </td>
    </div>
  </div>
</div>